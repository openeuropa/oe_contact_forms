<?php

/**
 * @file
 * OpenEuropa Contact Forms module.
 */

declare(strict_types = 1);

use Drupal\Core\Form\FormStateInterface;
use Drupal\contact\Entity\ContactForm;
use Drupal\Core\Url;

/**
 * Implements hook_form_FORM_ID_alter() for contact_form_form().
 */
function oe_contact_forms_form_contact_form_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\contact\ContactFormInterface $contact_form */
  $form_object = $form_state->getFormObject();

  if (!in_array($form_object->getOperation(), ['edit', 'add'], TRUE)) {
    // Only alter the edit and add forms.
    return;
  }

  $contact_form = $form_object->getEntity();

  $form['is_corporate_form'] = [
    '#type' => 'checkbox',
    '#title' => t('Is corporate form'),
    '#description' => t("Check this box if you'd like to make this a corporate form."),
    '#default_value' => $contact_form->getThirdPartySetting('oe_contact_forms', 'is_corporate_form'),
  ];

  $num_topics = $form_state->get('num_topics');
  if ($num_topics === NULL) {
    $form_state->set('num_topics', 1);
    $num_topics = 1;
  }

  $form['#tree'] = TRUE;
  $form['topics_fieldset'] = [
    '#type' => 'fieldset',
    '#title' => t('Topics'),
  ];
  
  for ($i = 0; $i < $num_topics; $i++) {
    $form['topics_fieldset']['group'] = [
      '#type' => 'fieldgroup',
    ];
    $form['topics_fieldset']['group'][$i]['topic_name'] = [
      '#type' => 'textfield',
      '#title' => t('Topic name'),
      '#states' => [
        'required' => [
          ':input[name="is_corporate_form"]' => ['checked' => TRUE],
        ],
      ],
    ];
    $form['topics_fieldset']['group'][$i]['topic_email_address'] = [
      '#type' => 'textfield',
      '#title' => t('Topic email address(es)'),
      '#states' => [
        'required' => [
          ':input[name="is_corporate_form"]' => ['checked' => TRUE],
        ],
      ],
    ];
  }
  
  $form['topics_fieldset']['ajax_target'] = [
    '#markup' => '<div id="topics-fieldset-wrapper"></div>',
  ];

  $form['topics_fieldset']['actions'] = [
    '#type' => 'actions',
  ];
  $form['topics_fieldset']['actions']['add_topic'] = [
    '#type' => 'link',
    '#title' => t('Add one more'),
    '#attached' => ['library' => ['core/drupal.ajax']],
    '#attributes' => ['class' => ['use-ajax']],
    '#url' => Url::fromRoute('oe_contact_forms.ajax.addmore', ['delta' => $num_topics]),
    '#limit_validation_errors' => [],
  ];

  $form['topic_label'] = [
    '#type' => 'textfield',
    '#title' => t('Topic label'),
    '#description' => t("Please specify the label for the Topics field. Leave empty for the default: 'Topic'."),
    '#default_value' => $contact_form->getThirdPartySetting('oe_contact_forms', 'topic_label'),
  ];
  $form['email_subject'] = [
    '#type' => 'textfield',
    '#title' => t('Email subject'),
    '#description' => t("Please specify the subject of the email."),
    '#states' => [
      'required' => [
        ':input[name="is_corporate_form"]' => ['checked' => TRUE],
      ],
    ],
    '#default_value' => $contact_form->getThirdPartySetting('oe_contact_forms', 'email_subject'),
  ];
  $form['header'] = [
    '#type' => 'textarea',
    '#title' => t('Header'),
    '#description' => t("Please specify the text to be displayed above the contact form for users that submit it."),
    '#default_value' => $contact_form->getThirdPartySetting('oe_contact_forms', 'header'),
  ];
  $form['privacy_policy'] = [
    '#type' => 'textarea',
    '#title' => t('Privacy policy'),
    '#description' => t("Please specify a privacy policy message to display on the form."),
    '#states' => [
      'required' => [
        ':input[name="is_corporate_form"]' => ['checked' => TRUE],
      ],
    ],
    '#default_value' => $contact_form->getThirdPartySetting('oe_contact_forms', 'privacy_policy'),
  ];
  $form['includes_fields_in_auto_reply'] = [
    '#type' => 'checkbox',
    '#title' => t('Includes fields in auto-reply'),
    '#description' => t("Check this box if you would like to include in the auto-reply also the values submitted by the user."),
    '#default_value' => $contact_form->getThirdPartySetting('oe_contact_forms', 'includes_fields_in_auto_reply'),
  ];
  $form['allow_canonical_url'] = [
    '#type' => 'checkbox',
    '#title' => t('Allow canonical URL'),
    '#description' => t("Check this box if you would like this contact form to be exposed at its default canonical URL."),
    '#default_value' => $contact_form->getThirdPartySetting('oe_contact_forms', 'allow_canonical_url'),
  ];
  $form['expose_as_block'] = [
    '#type' => 'checkbox',
    '#title' => t('Expose as block'),
    '#description' => t("Check this box if you would like to expose this contact form as a block."),
    '#default_value' => $contact_form->getThirdPartySetting('oe_contact_forms', 'expose_as_block'),
  ];
  $form['optional_fields'] = [
    '#type' => 'checkboxes',
    '#title' => t('Optional fields'),
    '#options' => [
      'oe_country_residence' => t('Country of residence'),
      'oe_telephone' => t('Phone'),
    ],
    '#description' => t("Please specify which optional fields you'd like to include in the form."),
    '#default_value' => $contact_form->getThirdPartySetting('oe_contact_forms', 'optional_fields'),
  ];

  $form['#entity_builders'][] = 'oe_contact_forms_builder';

}

/**
 * OE contact forms builder.
 *
 * @param string $entity_type
 * @param \Drupal\contact\Entity\ContactForm $contact_form
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function oe_contact_forms_builder(string $entity_type, ContactForm $contact_form, array &$form, FormStateInterface $form_state): void {
  $contact_form->setThirdPartySetting('oe_contact_forms', 'is_corporate_form', $form_state->getValue('is_corporate_form'));
  $contact_form->setThirdPartySetting('oe_contact_forms', 'topic_label', $form_state->getValue('topic_label'));
  $contact_form->setThirdPartySetting('oe_contact_forms', 'email_subject', $form_state->getValue('email_subject'));
  $contact_form->setThirdPartySetting('oe_contact_forms', 'header', $form_state->getValue('header'));
  $contact_form->setThirdPartySetting('oe_contact_forms', 'privacy_policy', $form_state->getValue('privacy_policy'));
  $contact_form->setThirdPartySetting('oe_contact_forms', 'includes_fields_in_auto_reply', $form_state->getValue('includes_fields_in_auto_reply'));
  $contact_form->setThirdPartySetting('oe_contact_forms', 'allow_canonical_url', $form_state->getValue('allow_canonical_url'));
  $contact_form->setThirdPartySetting('oe_contact_forms', 'expose_as_block', $form_state->getValue('expose_as_block'));
  $contact_form->setThirdPartySetting('oe_contact_forms', 'optional_fields', $form_state->getValue('optional_fields'));
}
